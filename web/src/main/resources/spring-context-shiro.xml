<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:gtzn.properties" />
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="platform.session.id"/>
	</bean>

	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <!-- 配置验证错误时的失败页面 ，这里配置为登录页面 -->
         <property name="failureUrl" value="${cas.server.url}/login?service=${cas.project.url}/shiro-cas" />
    </bean>
    <!-- 退出登录过滤器 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="${cas.server.url}/logout?service=${cas.project.url}/index" />
    </bean>
	<!-- 自定义casRealm -->
    <bean id="casRealm" class="com.gtzn.modules.sys.security.CasAuthorizingRealm">
        <property name="defaultRoles" value="ROLE_USER" /> 
        <!-- 配置cas服务器地址 -->
        <property name="casServerUrlPrefix" value="${cas.server.url}" />
        <!-- 客户端的回调地址设置，必须和上面的shiro-cas过滤器casFilter拦截的地址一致 -->
        <property name="casService" value="${cas.project.url}/shiro-cas" />
    </bean>

	<!-- shiro securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
		<property name="realm" ref="casRealm" />
	    <!-- sessionManager -->
 	    <property name="sessionManager" ref="sessionManager" />
	    <!-- subjectFactory -->
		<property name="subjectFactory" ref="casSubjectFactory" />
	    <!-- cacheManager -->
	    <property name="cacheManager" ref="cacheManager" />
	
	    <!-- By default the servlet container sessions will be used.  Uncomment this line
	         to use shiro's native sessions (see the JavaDoc for more): -->
	    <!-- <property name="sessionMode" value="native"/> -->
	</bean>

	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>
	
	<!-- shiro redisManager -->
	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
	    <property name="host" value="${redis.host}"/>
	    <property name="port" value="${redis.port}"/>
	    <!-- 最大空闲数 -->
	    <property name="maxIdle" value="${redis.shiro.maxIdle}"/>
	    <!-- 可以认为是最大并发登录 -->
	    <property name="maxTotal" value="${redis.shiro.maxTotal}"/>
	    <!-- optional properties:未登录或登录超时
	    <property name="timeout" value="10000"/>
	    <property name="password" value="123456"/>
	    -->
	</bean>
	
	<!-- redisSessionDAO -->
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	</bean>
	
	<!-- sessionManager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="redisSessionDAO" />
	     <!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
 		<!-- 去掉 jsessionId  -->
 		<property name="sessionIdUrlRewritingEnabled" value="false" />
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- cacheManager -->
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
	    <property name="redisManager" ref="redisManager" />
	</bean>

	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/shiro-cas = casFilter
				/logout = logout
				/sys/** = user
				/ploan/** = user
				/** = user
			</value>
		</constructor-arg>
	</bean>
	
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}/shiro-cas" />
		<property name="successUrl" value="${cas.project.url}/index" /> 
		<property name="filters">
            <map>
                <entry key="logout" value-ref="logout"/>
			<!--<entry key="authc" value-ref="formAuthenticationFilter"/>-->
                <entry key="casFilter" value-ref="casFilter" />
             </map>
        </property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>